Create table IF NOT EXISTS Employee (EmployeeId INTEGER PRIMARY KEY AUTOINCREMENT, 
					   FirstName TEXT NOT NULL, 
					   LastName TEXT NOT NULL,
					   DateOfBirth DATETIME NOT NULL,
					   DesignationId INTEGER NOT NULL,
					   DepartmentId INTEGER NOT NULL,
					   SuperiorId INTEGER,
					   DateOfJoining DATETIME NOT NULL,
					   EmailId TEXT NOT NULL UNIQUE,
					   MobileNo NUMERIC(10) UNIQUE CHECK (LENGTH(MobileNo) >= 10),
					   Address TEXT,
					   
					   FOREIGN KEY (DesignationId) REFERENCES Designation (DesignationId) 
					   ON DELETE NO ACTION ON UPDATE CASCADE,
					   
					   FOREIGN KEY (DepartmentId) REFERENCES Department (DepartmentId) 
					   ON DELETE NO ACTION ON UPDATE CASCADE			   
);

CREATE TABLE IF NOT EXISTS Designation(DesignationId INTEGER PRIMARY KEY AUTOINCREMENT,
			             DesignationName TEXT NOT NULL);
						 
CREATE TABLE IF NOT EXISTS Department(DepartmentId INTEGER PRIMARY KEY AUTOINCREMENT,
		                    DepartmentName TEXT NOT NULL);

CREATE TABLE IF NOT EXISTS Clients(ClientId INTEGER PRIMARY KEY AUTOINCREMENT,
					 Name TEXT NOT NULL,
					 Country TEXT NOT NULL,
					 EmailId TEXT NOT NULL UNIQUE,
					 ContactNo NUMERIC UNIQUE CHECK (LENGTH(ContactNo) >= 10),
);
CREATE TABLE IF NOT EXISTS SoftwarePlans(PlanId INTEGER PRIMARY KEY AUTOINCREMENT,
				   PlanName TEXT NOT NULL,
				   BillingType TEXT NOT NULL,
				   NoOfAllowedUsers TEXT NOT NULL,
				   Description TEXT,
				   Cost NUMERIC NOT NULL
);

CREATE TABLE IF NOT EXISTS Project(ProjectId INTEGER PRIMARY KEY AUTOINCREMENT,
					 PlanId INTEGER,
					 StartDate DATETIME,
					 EndDate DATETIME,
					 ClientId INTEGER,
					 Manager INTEGER,
                                              
                     FOREIGN KEY (ClientId) REFERENCES Clients (ClientId) 
					 ON DELETE NO ACTION ON UPDATE CASCADE
					 
					 FOREIGN KEY (PlanId) REFERENCES SoftwarePlans (PlanId) 
					 ON DELETE NO ACTION ON UPDATE CASCADE,
					 
					 FOREIGN KEY (Manager) REFERENCES Employee (EmployeeId) 
					 ON DELETE NO ACTION ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS Users(UserId INTEGER PRIMARY KEY AUTOINCREMENT, 
				   FirstName TEXT NOT NULL, 
				   LastName TEXT NOT NULL,
				   DateOfBirth DATETIME NOT NULL,
                   Country TEXT NOT NULL,
				   EmailId TEXT NOT NULL UNIQUE,
				   ContactNo NUMERIC(10) UNIQUE CHECK (LENGTH(ContactNo) >= 10)

);

CREATE TABLE IF NOT EXISTS UserSubscriptions(InvoiceId INTEGER PRIMARY KEY AUTOINCREMENT,
							 UserId INTEGER,
							 MembershipType TEXT,
							 ClientId INTEGER,
							 PlanId INTEGER,
							 StartDate DATETIME,
							 EndDate DATETIME,
							 BalanceDue NUMERIC,
							 PrepaidAmount NUMERIC DEFAULT 0,
							 PointOfContactId INTEGER,
							 
							 FOREIGN KEY (UserId) REFERENCES Users (UserId) 
							 ON DELETE NO ACTION ON UPDATE CASCADE,
							 
							 FOREIGN KEY (ClientId) REFERENCES Clients (ClientId) 
							 ON DELETE NO ACTION ON UPDATE CASCADE,
							 
							 FOREIGN KEY (PlanId) REFERENCES UserPlans (UserPlanId) 
							 ON DELETE NO ACTION ON UPDATE CASCADE,
							 
							 FOREIGN KEY (PointOfContactId) REFERENCES Employee (EmployeeId) 
							 ON DELETE NO ACTION ON UPDATE CASCADE				 
);
 
CREATE TABLE IF NOT EXISTS UserPlans(UserPlanId INTEGER PRIMARY KEY AUTOINCREMENT,
				   PlanName TEXT NOT NULL,
				   Description TEXT,
				   Cost NUMERIC NOT NULL
);

CREATE TABLE IF NOT EXISTS Login(Username TEXT PRIMARY KEY,
                                 UserId INTEGER NOT NULL,
                                 Password TEXT NOT NULL,

                                FOREIGN KEY (UserId) REFERENCES Users (UserId) 
                                ON DELETE NO ACTION ON UPDATE CASCADE
);

SELECT e1.FirstName||" "||e1.LastName AS EmployeeName, DepartmentName AS EmployeeDept, DesignationName AS EmployeeDesignation, e2.FirstName||" "||e2.LastName AS ReportingTo
FROM Employee e1,Department, Designation, Employee e2
where (e1.DepartmentId = Department.DepartmentId) and (e1.DesignationId = Designation.DesignationId) and (e1.SuperiorId=e2.EmployeeId)
ORDER BY ReportingTo;

SELECT c.Name,p.StartDate, p.EndDate, s.Cost, e.FirstName||" "||e.LastName AS ProjectManager
FROM Clients c, Project p, SoftwarePlans s,Employee e
WHERE (c.ClientId=p.ClientId) AND (p.PlanId=s.PlanId) AND (p.Manager=e.EmployeeId);

SELECT u1.FirstName||" "||u1.LastName AS User, u1.DateOfBirth , c.Name as MemberOf, u2.PlanName, u2.Cost, u3.BalanceDue
FROM Users u1, Clients c, UserPlans u2, UserSubscriptions u3
WHERE (u1.UserId=u3.UserId) AND (u3.ClientId=c.ClientId) AND (u3.PlanId=u2.UserPlanId) AND u2.UserPlanId=4;